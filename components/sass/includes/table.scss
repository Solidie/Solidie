@include breakpoint-minmax(1200, 1400) {
	.solidie-ui-table-wrapper {
		overflow-x: auto;
	}
}

table.solidie-ui-table {
	&,
	tr,
	th,
	td {
		border: none;
	}

	// Table utility classes
	.inline-flex-center {
		display: inline-flex;
		align-items: center;
		justify-content: center;
	}

	&.th-align-top {
		th {
			vertical-align: top;
		}
	}

	&.td-align-top {
		td {
			vertical-align: top;
		}
	}

	&.th-align-middle {
		th {
			vertical-align: middle;
		}
	}

	&.td-align-middle {
		td {
			vertical-align: middle;
		}
	}

	&.th-align-bottom {
		th {
			vertical-align: bottom;
		}
	}

	&.td-align-bottom {
		td {
			vertical-align: bottom;
		}
	}

	.v-align-top {
		vertical-align: top;
	}

	.v-align-middle {
		vertical-align: middle;
	}

	.v-align-bottom {
		vertical-align: bottom;
	}

	// Table Structure
	$radius: 6px;
	border-collapse: separate;
	border-spacing: 0;
	min-width: 300px;
	width: 100%;
	border-radius: $radius;
	// overflow: hidden;

	&.solidie-no-thead {
		tr:first-child {
			td:first-child {
				border-top-left-radius: $radius;
			}
			td:last-child {
				border-top-right-radius: $radius;
			}
		}
	}

	@include breakpoint-min(desktop-lg) {
		tr:first-child {
			/* top-left border-radius */
			th:first-child {
				border-top-left-radius: $radius;
			}
			/* top-right border-radius */
			th:last-child {
				border-top-right-radius: $radius;
			}
		}

		tr:last-child {
			/* bottom-left border-radius */
			td:first-child {
				border-bottom-left-radius: $radius;
			}
			/* bottom-right border-radius */
			td:last-child {
				border-bottom-right-radius: $radius;
			}
		}

		tr {
			&:last-child td {
				border-bottom: 1px solid $stroke-light-30;
			}
			&:nth-child(even) td {
				background-color: rgba(239, 241, 247, 0.3);
			}
		}

		th,
		td {
			border-top: 1px solid $stroke-light-30;

			// min-width: calc(100% / var(--column-count));

			&:first-child {
				border-left: 1px solid $stroke-light-30;
				padding-left: 20px;
			}

			&:last-child {
				border-right: 1px solid $stroke-light-30;
				padding-right: 20px;
			}
		}

		th {
			background: rgba(239, 241, 247, 0.8);
			text-align: left;
			padding: 15px 10px;
		}

		td {
			padding: 17px 10px;
		}

		.solidie-shrink {
			width: 1px;
			white-space: nowrap;
		}
	}
	
	// Table th/td Content Styles
	&.table-dashboard-course-list {
		td {
			&:nth-child(1),
			&:nth-child(2) {
				vertical-align: top;
			}
		}
	}

	.td-solidie-rating {
		.solidie-rating-stars {
			align-items: flex-start;
			> span {
				margin-right: 0;
			}
		}
		.solidie-rating-text {
			@include getTypography(400, 16px, 162%);
			padding-left: 1px;
		}
	}

	.td-course {
		@media (min-width: 1400px) {
			padding-right: 13%;
		}
		a {
			color: inherit;
			text-decoration: none;
		}
		.course-meta {
			margin-top: 5px;

			span:not(:last-child) {
				margin-right: 10px;
			}
		}
	}

	.td-action-btns {
		gap: 10px;
		.btn-outline {
			&.solidie-btn {
				color: #757c8e;;
				font-weight: 500;
				font-size: 13px;
				line-height: 123%;;
				display: inline-block;
				border: 1px solid $stroke-gray;
				box-sizing: border-box;
				border-radius: 6px;
				text-decoration: none;
				background: transparent;
				padding: 8px 10px;
				transition: 100ms ease;

				&:hover,
				&.solidie-brand {
					color: $brand-wordpress;
					border-color: $brand-wordpress;
				}

				&.solidie-danger {
					&:hover {
						color: $text-error;
						border-color: $text-error;
					}
				}
			}
		}

		> a:not(:last-child) {
			// margin-right: 13px;
		}

		.btn-text {
			color: #757c8e;;
			font-size: 24px;
			text-decoration: none;
			display: flex;
			&:hover {
				color: $brand-wordpress;
			}
		}

		.btn-delete {
			background: transparent;
			border: none;
			outline: none;
			font-size: 24px;
			width: 34px;
			height: 34px;
			color: $black-40;
			border-radius: 50%;
			display: flex;
			align-items: center;
			justify-content: center;
			&:hover {
				background: #f4f6f9;
			}
		}
		.solidie-form-select-with-icon {
			margin-right: 10px;
		}
	}

	.td-feedback {
		.review-text {
			@include getTypography(500, 16px, 169%);
		}
		.review-text {
			margin-top: 11px;
		}

		.course-name {
			margin-top: 15px;
		}
	}

	.td-avatar {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		gap: 10px;
		img {
			width: 34px;
			height: 34px;
			border-radius: 50%;
		}
		.btn-text {
			text-decoration: none;
			color: inherit;
		}

		.btn-detail-link {
			font-size: 24px;
			margin-left: -5px;
			margin-top: 3px;
		}
	}

	.td-statement-info {
		.solidie-badge-label {
			margin-right: 14px;
		}

		.meta-data-2 {
			margin-top: 8px;
		}
		.meta-data-3 {
			margin-top: 6px;
			> span {
				margin-right: 20px;
			}
		}
	}

	.td-progress {
		.progress-bar {
			position: relative;
			width: 50px;
			height: 4px;
			background: #e3e5eb;
			border-radius: 2px;
			overflow: hidden;
			.progress-value {
				background: #3e64de;
				position: absolute;
				width: var(--progress-value);
				height: 100%;
			}
		}
		.progress-text {
			margin-left: 10px;
		}
	}

	.td-datetime {
		@include breakpoint-max(991) {
			br {
				display: none;
			}
		}
	}

	// Form elements
	select.solidie-form-select {
		min-width: max-content;
	}

	input.solidie-form-check-input[type='checkbox'] {
		width: 16px;
		height: 16px;
		border-width: 1px;
		background-size: 10px;
		&:focus {
			box-shadow: 0 0 0 2px var(--solidie-primary-lighter);
		}
	}

	.td-checkbox {
		input[type='checkbox'] {
			margin-top: 7px;
		}
	}
	

	// Table Responsive Styles
	&.solidie-ui-table-responsive {
		position: relative;
		overflow-x: auto;

		/*
		Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
		*/
		@media only screen and (max-width: 1199px), (min-device-width: 1200px) and (max-device-width: 1200px) {
			/* Force table to not be like tables anymore */
			table,
			thead,
			tbody,
			th,
			td,
			tr {
				display: block;
			}

			/* Hide table headers (but not display: none;, for accessibility) */
			thead tr {
				position: absolute;
				top: -9999px;
				left: -9999px;
			}

			tr {
				&:not(:last-child) {
					margin-bottom: 22px;
				}
				td {
					word-break: break-word;
					&:last-child {
						border-bottom: 1px solid $stroke-light-30;
						border-bottom-left-radius: 6px;
						border-bottom-right-radius: 6px;
					}
					&:first-child {
						border-top-left-radius: 6px;
						border-top-right-radius: 6px;
					}

					&:nth-child(odd) {
						background: rgba(255, 255, 255, 1);
					}

					&:nth-child(even) {
						background: rgba(239, 241, 247, 0.3);
					}
				}
			}

			td {
				/* Behave  like a "row" */
				border: none;
				border-radius: 0;
				position: relative;
				padding: 10px;

				width: unset;
				text-align: left;

				border-top: 1px solid $stroke-light-30;
				border-left: 1px solid $stroke-light-30;
				border-right: 1px solid $stroke-light-30;

				display: flex;

				&.column-fullwidth {
					padding: 15px 20px;
				}

				&:not(.column-fullwidth) {
					padding-left: 40%;

					&:before {
						/* Now like a table header */
						position: absolute;
						/* Top/left values mimic padding */
						top: 0;
						left: 0;
						width: 35%;
						padding-left: 20px;
						padding-right: 10px;
						white-space: nowrap;

						/* Label the data You could also use a data-* attribute and content for this. That way "bloats" the HTML,this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow. */

						content: attr(data-th);
						height: 100%;
						display: flex;
						align-items: center;

						font-weight: 400;
						font-size: 13px;
						line-height: 138%;
						color: $text-subsued;
					}
				}
			}
		}
	}
	
	// No border
	&-no-border {
		&,
		td,
		th {
			border: none;
		}

		td,
		th {
			padding: 0;
			padding-top: 5px;
			padding-bottom: 5px;
		}

		&.solidie-is-lefty {
			td:not(:last-child) {
				padding-right: 15px;
			}
		}

		&.solidie-is-flexible {
			width: auto;
		}

		&:not(.solidie-is-flexible) {
			width: 100%;
		}
	}
}